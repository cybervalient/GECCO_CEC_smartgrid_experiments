import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
from numpy import array

fig, ax = plt.subplots(1, 1, figsize=(12,6)) # make the figure with the size 10 x 6 inches
fig.suptitle('Average Fitness')

x = np.linspace(0,20,20)

VNS_DEEPSO = [22.50242949,
22.46755351,
26.93981345,
22.9691361,
22.43584131,
22.52019872,
22.41371138,
22.48194827,
27.8019473,
22.55902607,
22.67841417,
22.76950126,
22.4896881,
30.74015669,
22.49024211,
22.98002075,
22.49111427,
22.4294472,
22.80853554,
22.97503208
]


HL_PS_VNSO = [36.2444017,
34.69205868,
37.37489193,
34.41526212,
35.17525354,
34.0718771,
38.36885835,
34.77328142,
33.49008111,
44.03320629,
40.41337217,
36.98210897,
37.92299619,
33.44567251,
37.68722398,
36.74623862,
40.43504241,
33.61054861,
38.51351501,
33.16709255
]


GM_VNPSO = [32.61320702,
35.15857899,
35.18261825,
34.98010741,
36.21160909,
36.86007507,
34.75496586,
36.09944706,
37.5207309,
35.15006601,
34.42743055,
33.19897015,
33.9249371,
35.29648163,
34.32912003,
35.33461284,
34.65044427,
36.68645739,
33.87666467,
34.97229854
]


PSO_GBP = [80.54550783,
80.89083067,
81.09205371,
80.89046272,
80.98853218,
80.95330905,
81.83599355,
80.86332392,
80.88741704,
80.87136864,
80.85226552,
80.68577055,
81.10687445,
81.19337441,
80.8759942,
80.86248202,
80.81518894,
80.89533166,
80.87402153,
80.36034144
]



CUMDANCAUCHY = [59.21029873,
51.00391745,
61.47977511,
53.55628173,
45.86243726,
74.35963058,
44.4566728,
42.9082254,
61.91375872,
53.62305942,
62.08708196,
42.54499463,
46.57077642,
56.3481471,
81.0693038,
45.37569664,
54.1406506,
56.37375646,
56.20817381,
43.83842749
]

chaotic_deepso = [96.64809653,
81.54693467,
92.55763633,
88.96649905,
87.64197414,
90.72486712,
88.45221795,
92.13072724,
87.26453791,
87.03454755,
92.7415437,
90.62350298,
94.58501091,
86.13168955,
86.48980272,
77.04594208,
88.05175091,
86.91908764,
87.75287547,
93.71702369
]

DESS = [183.2804694,
204.9827571,
194.1095838,
177.6628549,
201.403438,
206.1296306,
200.5393074,
216.3280696,
235.4796948,
220.6709029,
205.8468044,
207.4968387,
184.6031048,
188.3427057,
201.763946,
186.9490898,
224.8738425,
197.702432,
193.6987735,
179.4924997
]

EPSO  = [90.27574487,
88.85296803,
62.93613569,
99.45079352,
79.75519208,
69.39484052,
81.79696195,
106.1388887,
58.39757823,
77.00208536,
83.83826658,
86.9563682,
75.34083736,
91.27114517,
98.63951409,
92.18728217,
82.75962223,
81.28334811,
94.70586227,
123.0539387
] 

evdeepso = [78.75444884,
77.59431563,
77.89109103,
78.33270552,
79.0285885,
67.8382081,
78.55175799,
78.67752561,
77.60644711,
77.67092808,
77.64166076,
71.30886812,
83.34105902,
77.32308461,
77.75845167,
68.7031629,
74.35966228,
67.882125,
78.80274842,
78.03952123
] 

Firefly = [107.931486,
98.67809066,
105.0896263,
102.787031,
112.4392974,
109.5669653,
102.7840033,
108.5151494,
108.2721233,
105.3772201,
107.2794962,
106.8141981,
109.7498487,
106.0495157,
94.81481695,
98.33994477,
105.3668499,
96.97437634,
93.61935057,
99.57915513
]

Guide_DE = [127.6662568,
119.9839215,
121.3716043,
96.96626266,
139.7502341,
124.5068855,
92.77443717,
137.9370006,
146.314584,
138.8146493,
103.9968793,
138.8478835,
89.35675025,
151.2275835,
128.5731458,
129.1819686,
109.2651138,
139.000665,
125.1604254,
97.60975136
]

UPSO = [99.57540838,
89.46604387,
89.132533,
110.7431892,
97.83975419,
120.4357866,
111.2210465,
107.5584725,
111.07554,
124.4312114,
108.7599485,
97.08388019,
107.8510626,
124.6066177,
111.8741394,
99.67599791,
82.78136531,
114.5125847,
129.2894218,
110.1323924
]

ABC_DE = [80.05357562,
88.85318443,
86.31008142,
87.750426,
87.42316531,
86.539584,
87.22359299,
88.13369433,
78.14701802,
84.83105898,
86.7428876,
86.05667131,
84.5664767,
89.82546534,
82.68498332,
87.14152144,
87.20505159,
90.40026735,
86.26688376,
77.65767651
]

AJSO = [425.0988904,
366.0643758,
450.3625468,
463.5071886,
455.8961515,
441.9868393,
376.6436644,
425.1831629,
427.1785828,
345.0208707,
520.9148962,
440.1189162,
426.4539719,
470.7596288,
460.1088391,
454.737269,
448.0797182,
456.1139045,
392.6208632,
444.1078812
]

CE_CMAES = [228.6527131,
378.714349,
219.3033622,
197.8039698,
167.1397217,
174.0890409,
207.3127639,
202.9503081,
206.1019063,
226.0706379,
182.1812601,
202.4404204,
205.6202572,
200.4130134,
163.8440793,
154.915663,
234.0184728,
169.8886154,
208.2948566,
167.1703465
]

GASAPSO = [82.26876831,
111.3777294,
82.68955479,
89.55660289,
81.11744105,
83.34522417,
81.40664871,
81.37749377,
88.45350342,
84.87229537,
81.3436351,
123.7530079,
81.49979955,
85.21229658,
81.18062334,
90.98634753,
82.78657294,
102.8946337,
91.86348463,
81.44871673
]

HFEABC = [212.1093609,
345.5502502,
145.2774133,
121.4963473,
176.3447595,
78.87255061,
168.9038678,
143.8411568,
82.44236444,
505.0476531,
149.478766,
179.8769631,
172.8862289,
177.4441455,
422.1147512,
165.0720107,
238.4984038,
122.4682488,
143.5545186,
131.3012268
]

# Labels to use for each line
line_labels = ["CUMDANCauchy", "PSO-GBP", "GM-VNPSO","HL-PSVNSO","VNS-DEEPSO","IC-DEEPSO","DESS","CEPSO","EV-DEPSO","Firefly","Improved DE","UPSO","ABC-DE", "AJSO", "CE-CMAES","GASAPSO",	"HFEABC"
]

l1 = ax.plot(x,CUMDANCAUCHY)[0]
l2 = ax.plot(x,PSO_GBP)[0]
l3 = ax.plot(x,GM_VNPSO)[0]
l4 = ax.plot(x,HL_PS_VNSO)[0]
l5 = ax.plot(x,VNS_DEEPSO)[0]
l6 = ax.plot(x,chaotic_deepso)[0]
l7 = ax.plot(x,DESS)[0]
l8 = ax.plot(x,EPSO)[0]
l9 = ax.plot(x,evdeepso)[0]
l10 = ax.plot(x,Firefly)[0]
l11 = ax.plot(x,Guide_DE)[0]
l12 = ax.plot(x,UPSO)[0]
l13 = ax.plot(x,ABC_DE)[0]
l14 = ax.plot(x,AJSO)[0]
l15 = ax.plot(x,CE_CMAES)[0]
l16 = ax.plot(x,GASAPSO)[0]
l17 = ax.plot(x,HFEABC)[0]
				


lgd = fig.legend([l1, l2, l3, l4, l5, l6, l7, l8, l9,l10,l11,l12,l13,l14,l15,l16,l17],              # List of the line objects
           labels= line_labels,       # The labels for each line
           loc="center right",        # Position of the legend
           borderaxespad=0.1,         # Add little spacing around the legend box
         #  bbox_to_anchor=(1.3, 0.5),
           title="Algorithm"        # Title for the legend
           )      



#plt.title('Average Convergence Rate')
plt.xlabel('Run')
plt.ylabel('Fitness')
#plt.legend(loc=0)
plt.grid(True)
# Adjust the scaling factor to fit your legend text completely outside the plot
# (smaller value results in more space being made for the legend)
plt.subplots_adjust(right=0.85)
plt.show()

#fig.savefig('image_output.png',
 #           dpi=300, 
  #          format='png', 
   #         bbox_extra_artists=(lgd,),
    #        bbox_inches='tight')