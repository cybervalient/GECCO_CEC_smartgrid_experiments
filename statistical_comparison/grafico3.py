import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
from numpy import array

fig, ax = plt.subplots(1, 1, figsize=(12,6)) # make the figure with the size 10 x 6 inches
fig.suptitle('Execution Time')

x = np.linspace(0,20,20)

VNS_DEEPSO = [110.523771,
109.7595027,
112.680637,
117.9976251,
116.9141476,
116.8212379,
116.9568199,
116.4564147,
120.7814355,
116.7859342,
118.651587,
116.3652011,
117.6233572,
116.8370055,
117.6462801,
116.3185104,
119.533122,
114.3912687,
125.0333809,
118.8267486
]


HL_PS_VNSO = [98.20420445,
94.79756083,
100.2704301,
113.2150922,
109.193275,
113.1068849,
99.82075329,
97.37281439,
98.7208956,
95.81841389,
99.22768085,
96.77876105,
99.32591477,
108.0236021,
110.4614472,
100.7409416,
96.76456666,
97.74853547,
93.65134965,
98.73853564
]


GM_VNPSO = [103.0400694,
103.3876226,
103.6108408,
102.9412288,
103.5546195,
102.8320425,
106.5266311,
103.0681612,
104.1144095,
103.1609161,
104.3755271,
102.6387384,
103.5824128,
101.5821,
102.5578618,
102.2707577,
101.8963123,
102.5643408,
103.0782061,
103.1579861
]


PSO_GBP = [97.11266027,
96.46975469,
95.68857346,
95.72796806,
96.38598213,
96.14646958,
98.48649391,
95.63166621,
96.69767235,
97.61615003,
92.24117335,
95.15850255,
93.77478634,
95.28003579,
94.74540904,
93.9592278,
94.04524772,
93.93618458,
94.23202102,
93.81785391
]



CUMDANCAUCHY = [54.9144269,
55.0541087,
53.8225123,
53.3153504,
53.3267198,
53.6187457,
54.2240848,
53.094262,
53.1680727,
54.4281447,
54.0087274,
54.5408905,
53.3028572,
52.8978773,
53.1719587,
53.1833719,
53.7238496,
54.6232532,
53.4711602,
52.7840748
]

chaotic_deepso = [242.307879,
256.3103052,
246.5994794,
244.0651666,
245.9825776,
253.3674515,
248.4911256,
241.7996869,
256.8803336,
244.8015407,
251.4754109,
243.3705927,
240.0514265,
243.8943915,
247.1979055,
249.4195124,
249.5912068,
238.7498933,
253.8636346,
248.8451414
]

DESS = [286.8350268,
263.1900836,
298.9527406,
329.5683232,
304.3433479,
300.8528602,
326.7811052,
328.5551407,
355.8811704,
455.4146317,
725.8683901,
705.8071955,
670.0725736,
683.952963,
485.1084242,
263.4363829,
280.6516532,
299.7194585,
324.5347165,
321.5206679
]

EPSO  = [317.8923713,
315.3579424,
272.9669606,
288.2145868,
303.7695783,
330.7851772,
325.1623328,
334.2050215,
264.5992633,
286.9320875,
340.6266082,
271.2849342,
276.2696271,
274.891258,
307.9021722,
326.9441141,
329.452742,
341.0080453,
351.8364107,
361.0422757
] 

evdeepso = [390.4481207,
360.9308873,
487.3755316,
403.7412291,
512.9960768,
575.4905445,
844.3285469,
813.9919802,
1441.405714,
1275.718368,
483.4921402,
335.0026343,
314.9706625,
288.2821438,
316.0254881,
306.8910564,
305.6588591,
318.6236478,
327.7465202,
294.881624
] 

Firefly = [2726.796786,
2902.044217,
3554.676118,
3513.017829,
3450.272073,
2158.828034,
2151.155385,
2121.822322,
3276.542279,
2134.178448,
2116.903642,
3402.263352,
2154.030961,
3394.759052,
2168.269138,
3424.700022,
3445.910567,
2170.588348,
3399.226625,
2139.91365
]

Guide_DE = [397.2316591,
380.2611013,
386.8372724,
661.0339299,
642.6052711,
365.4846628,
386.8587089,
363.0655983,
510.1081056,
825.3265349,
944.8516533,
889.995311,
1022.8311,
1127.986031,
1030.674802,
1171.792797,
1009.922521,
1352.858559,
1275.906812,
975.2704115
]

UPSO = [279.5473081,
339.4147167,
488.8218705,
111.8173295,
113.1874187,
112.0486074,
112.126464,
114.3319306,
110.5182687,
110.9281228,
114.2262634,
115.2522638,
113.8921299,
113.8279896,
120.7621005,
112.2346351,
112.3335303,
113.0119665,
115.7081794,
114.0406433
]

ABC_DE = [289.2725778,
277.2376778,
314.3634291,
334.677697,
303.6618973,
586.6772288,
787.1512668,
2157.962279,
7208.461124,
1643.003764,
293.8506026,
277.9625395,
280.5221224,
275.370773,
334.8460309,
275.0263694,
273.152236,
268.5007133,
286.8587056,
321.2064327
]

AJSO = [835.4496535,
370.9199526,
360.9792053,
377.2483142,
432.6874972,
1200.601755,
316.2640523,
322.8080149,
319.9962699,
318.6277533,
318.6712122,
322.3050689,
318.2251442,
322.0782767,
323.518882,
335.1225943,
327.5388326,
319.7901991,
323.5098646,
328.8759746
]

CE_CMAES = [1672.106018,
1903.409622,
1385.847743,
1384.743801,
1386.992541,
1384.474489,
1381.326207,
1417.657144,
1393.10643,
1387.227019,
1381.832214,
1389.004962,
1393.731842,
1390.120779,
1377.195262,
1401.495879,
1386.66545,
1400.742381,
1421.372559,
1380.858201
]

GASAPSO = [387.520881,
479.7507435,
538.1021461,
368.9311962,
338.7820575,
358.3823911,
346.6794979,
480.5584954,
523.1012718,
543.089122,
549.4998834,
685.2314456,
1021.100451,
898.3942902,
877.6247856,
945.0407625,
847.8362087,
839.2239795,
807.0033948,
322.134857
]

HFEABC = [197.9979546,
172.0595754,
172.1101256,
182.2695746,
176.6247137,
169.3275464,
172.1328533,
160.8541524,
178.7795294,
201.3486994,
221.9064205,
246.6683525,
248.2652668,
157.5545042,
154.7059636,
149.2772469,
151.3013642,
158.9881493,
149.8707414,
153.3381727
]

# Labels to use for each line
line_labels = ["CUMDANCauchy", "PSO-GBP", "GM-VNPSO","HL-PSVNSO","VNS-DEEPSO","IC-DEEPSO","DESS","CEPSO","EV-DEPSO","Firefly","Improved DE","UPSO","ABC-DE", "AJSO", "CE-CMAES","GASAPSO",	"HFEABC"
]

l1 = ax.plot(x,CUMDANCAUCHY)[0]
l2 = ax.plot(x,PSO_GBP)[0]
l3 = ax.plot(x,GM_VNPSO)[0]
l4 = ax.plot(x,HL_PS_VNSO)[0]
l5 = ax.plot(x,VNS_DEEPSO)[0]
l6 = ax.plot(x,chaotic_deepso)[0]
l7 = ax.plot(x,DESS)[0]
l8 = ax.plot(x,EPSO)[0]
l9 = ax.plot(x,evdeepso)[0]
l10 = ax.plot(x,Firefly)[0]
l11 = ax.plot(x,Guide_DE)[0]
l12 = ax.plot(x,UPSO)[0]
l13 = ax.plot(x,ABC_DE)[0]
l14 = ax.plot(x,AJSO)[0]
l15 = ax.plot(x,CE_CMAES)[0]
l16 = ax.plot(x,GASAPSO)[0]
l17 = ax.plot(x,HFEABC)[0]
				


lgd = fig.legend([l1, l2, l3, l4, l5, l6, l7, l8, l9,l10,l11,l12,l13,l14,l15,l16,l17],              # List of the line objects
           labels= line_labels,       # The labels for each line
           loc="center right",        # Position of the legend
           borderaxespad=0.1,         # Add little spacing around the legend box
         #  bbox_to_anchor=(1.3, 0.5),
           title="Algorithm"        # Title for the legend
           )      



#plt.title('Average Convergence Rate')
plt.xlabel('Run')
plt.ylabel('Time(sec)')
#plt.legend(loc=0)
plt.grid(True)
# Adjust the scaling factor to fit your legend text completely outside the plot
# (smaller value results in more space being made for the legend)
plt.subplots_adjust(right=0.85)
plt.show()

#fig.savefig('image_output.png',
 #           dpi=300, 
  #          format='png', 
   #         bbox_extra_artists=(lgd,),
    #        bbox_inches='tight')