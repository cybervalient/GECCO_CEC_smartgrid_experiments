import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
from numpy import array

fig, ax = plt.subplots(1, 1, figsize=(12,6)) # make the figure with the size 10 x 6 inches
fig.suptitle('Average Convergence Rate')

x = np.linspace(0,20,20)

VNS_DEEPSO = [-0.006428067, -0.002515952, -0.004207684,-0.003595132,
-0.004690326,
-0.002696274,
-0.003991384,
-0.001636905,
-0.00301557,
-0.003195101,
-0.004058674,
-0.004324885,
-0.004208975,
-0.002512784,
-0.002348028,
-0.004329827,
-0.003148719,
-0.004244052,
-0.002558358,
-0.00274748
]


Improved_EVDEPSO = [0.121246246,
6.62E-06,
0.021370436,
0.110062923,
0.019545063,
0.871013779,
0.108235575,
0.014096993,
0.010751133,
0.117190734,
0.016199666,
0.109110767,
0.004552992,
0.012640163,
0.006534702,
0.110576413,
0.12353689,
0.113021215,
0.114683429,
0.106783741
]


PSO_GBP = [0,
-1.30E-01,
0,
0,
-0.128630398,
-0.135243773,
0,
0,
-0.113718199,
0,
0,
0,
-0.121600248,
0,
0,
0,
0,
0,
0,
-0.12586948
]


CEPSO = [-0.555783658,
-6.23E-01,
-0.657899028,
-0.66373543,
-0.688709158,
-0.62271141,
-0.678487612,
-0.592010354,
-0.641606464,
-0.464858953,
-0.64031548,
-0.640505177,
-0.615627619,
-0.543295837,
-0.618085321,
-0.681493915,
-0.641542933,
-0.620200212,
-0.571545895,
-0.648094594
]



Chaotic_DEEPSO = [0.098429189,
1.19E-01,
0.134302574,
0.118813739,
0.114823887,
0.130724083,
0.128871874,
0.110602864,
0.16033892,
0.132793452,
0.162698387,
0.123252983,
0.139273854,
0.138291862,
0.120177544,
0.109879839,
0.114140486,
0.147034458,
0.111360318,
0.127210996
]


UPSO = [0,
0.00E+00,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
]


GuidedDE = [-0.11703057,
-9.77E-02,
-0.10470281,
-0.097040229,
-0.114521523,
-0.102173576,
-0.104277276,
-0.11682754,
-0.10375549,
-0.116562834,
-0.09299412,
-0.114150679,
-0.100451481,
-0.111647657,
-0.104779812,
-0.11331359,
-0.103924327,
-0.11872761,
-0.097766956,
-0.095117417
]


Firefly = [-0.35011684,
-3.94E-01,
-0.340856822,
-0.327192642,
-0.351134757,
-0.299692175,
-0.333174311,
-0.365300312,
-0.342753553,
-0.326802634,
-0.383275488,
-0.374536453,
-0.364883068,
-0.319512962,
-0.367238554,
-0.374080592,
-0.344496516,
-0.268216244,
-0.312330584,
-0.370907183
]


DESS = [-0.060229432,
-6.98E-02,
-0.056348072,
-0.073338489,
-0.072515151,
-0.062889831,
-0.056327988,
-0.055674263,
-0.070249823,
-0.068737922,
-0.061065626,
-0.076358496,
-0.064243778,
-0.071765093,
-0.061737273,
-0.068835144,
-0.069285237,
-0.081983085,
-0.076760861,
-0.066067313
]

CUMDANCAUCHY = [-0.001567429,
-2.95E-03,
-0.002018499,
-0.003445615,
-0.003582271,
0.000165821,
-0.002947825,
-0.003356852,
-0.004310545,
-0.002404136,
-0.002530836,
-0.002720886,
-0.005817596,
-0.00190661,
-0.003348978,
-0.002617475,
-0.0067216,
-0.002231061,
-0.00220393,
-0.006799946
]

# Labels to use for each line
line_labels = ["CUMDANCauchy", "DESS", "Firefly","Improved DE","UPSO","IC-DEEPSO","VNS-DEEPSO","EV-DEPSO","PSO-GBP","CEPSO"]


l1 = ax.plot(x,CUMDANCAUCHY)[0]
l2 = ax.plot(x,DESS)[0]
l3 = ax.plot(x,Firefly)[0]
l4 = ax.plot(x,GuidedDE)[0]
l5 = ax.plot(x,UPSO)[0]
l6 = ax.plot(x,Chaotic_DEEPSO)[0]
l7 = ax.plot(x,VNS_DEEPSO)[0]
l8 = ax.plot(x,Improved_EVDEPSO)[0]
l9 = ax.plot(x,PSO_GBP)[0]
l10 = ax.plot(x,CEPSO)[0]


lgd = fig.legend([l1, l2, l3, l4, l5, l6, l7, l8, l9, l10],              # List of the line objects
           labels= line_labels,       # The labels for each line
           loc="center right",        # Position of the legend
           borderaxespad=0.1,         # Add little spacing around the legend box
         #  bbox_to_anchor=(1.3, 0.5),
           title="2018 Algorithm"        # Title for the legend
           )      



#plt.title('Average Convergence Rate')
plt.xlabel('Run')
plt.ylabel('Rate')
#plt.legend(loc=0)
plt.grid(True)
# Adjust the scaling factor to fit your legend text completely outside the plot
# (smaller value results in more space being made for the legend)
plt.subplots_adjust(right=0.85)
plt.show()

#fig.savefig('image_output.png',
 #           dpi=300, 
  #          format='png', 
   #         bbox_extra_artists=(lgd,),
    #        bbox_inches='tight')