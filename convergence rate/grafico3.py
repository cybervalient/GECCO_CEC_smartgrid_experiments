import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
from numpy import array

fig, ax = plt.subplots(1, 1, figsize=(12,6)) # make the figure with the size 10 x 6 inches
fig.suptitle('Average Convergence Rate')

x = np.linspace(0,20,20)

VNS_DEEPSO = [1.931772257,
1.928934636,
1.912381266,
1.91229119,
1.928390159,
1.932595323,
1.926461694,
1.93068558,
1.911056131,
1.925231314,
1.894835989,
1.908185714,
1.930659602,
1.887184495,
1.931138363,
1.913192487,
1.927253087,
1.927974932,
1.909941412,
1.914210011
]


Improved_EVDEPSO = [0.027359244,
0.016977769,
0.087075892,
0.008846915,
0.009904658,
0.012498728,
0.093151097,
0.061416454,
0.098353975,
0.026623668,
0.093934924,
0.017839373,
0.018591247,
0.496999285,
0.063183991,
0.030918219,
2.209112079,
0.47720149,
0.062891306,
0.010419675
]


PSO_GBP = [-0.068825896,
-0.277960803,
-0.174545293,
-0.273856113,
-0.272077497,
-0.282353909,
-0.167935315,
-0.170124258,
-0.276271494,
-0.269794898,
-0.286424549,
-0.173492296,
-0.267937446,
-0.276906775,
-0.165995976,
-0.173198325,
-0.274403393,
-0.271229697,
-0.274733032,
-0.268276779
]


CEPSO = [-4.582443698,
-4.668980358,
-4.775399812,
-4.206655117,
-4.110419351,
-4.802688725,
-4.884358016,
-3.78006286,
-5.390622426,
-5.771656358,
-4.905207912,
-6.109067265,
-4.923256311,
-4.265220595,
-4.535244983,
-3.722159839,
-4.701646868,
-4.829084394,
-4.28696105,
-4.043149083
]



Chaotic_DEEPSO = [0.246190749,
0.213190243,
0.807600177,
0.270822331,
1.182888239,
0.723391389,
0.191012429,
1.228366056,
0.649057509,
0.260362361,
0.258062582,
0.715051256,
0.197057613,
0.801777656,
0.685255437,
0.655869986,
0.228161156,
0.294838902,
0.708358334,
0.681139029
]


UPSO = [0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
]


GuidedDE = [-0.715901826,
-0.658262622,
-0.602701238,
-0.666411531,
-0.745186371,
-1.028912724,
-0.805272088,
-0.978049531,
-0.616457936,
-0.924480415,
-0.714022536,
-1.008510981,
-0.7335946,
-0.70957193,
-0.659717159,
-1.00375087,
-0.843328759,
-0.730197456,
-0.694015699,
-0.836251387
]


Firefly = [-0.370570315,
-0.392816691,
-0.348006814,
-0.335858372,
-0.372613155,
-0.409761507,
-0.295457899,
-0.381177227,
-0.444879761,
-0.346833918,
-0.348409699,
-0.336566073,
-0.330675653,
-0.354737664,
-0.374239726,
-0.285817162,
-0.36921483,
-0.374896562,
-0.40245984,
-0.388560246
]


DESS = [-1.891368926,
-0.859604406,
-2.014266057,
-1.055919602,
-1.215942649,
-1.1016043,
-1.320230888,
-1.863053549,
-1.484629307,
-0.824255092,
-1.704067513,
-1.485983574,
-1.467334897,
-1.462739754,
-1.261830766,
-1.585335538,
-1.582618902,
-2.213684171,
-1.431158071,
-0.958146364
]

CUMDANCAUCHY = [-0.176021556,
-0.260756485,
-0.371070449,
-0.608703668,
-0.28948412,
-0.178547893,
-0.398915601,
-0.221171608,
-0.261796283,
-0.331912487,
-0.117848412,
-0.317197835,
-0.483445847,
-0.18919594,
-0.069522334,
-0.281743617,
-0.300508147,
-0.322299167,
-0.418225806,
-0.341571473
]

# Labels to use for each line
line_labels = ["CUMDANCauchy", "DESS", "Firefly","Improved DE","UPSO","IC-DEEPSO","VNS-DEEPSO","EV-DEPSO","PSO-GBP","CEPSO"]


l1 = ax.plot(x,CUMDANCAUCHY)[0]
l2 = ax.plot(x,DESS)[0]
l3 = ax.plot(x,Firefly)[0]
l4 = ax.plot(x,GuidedDE)[0]
l5 = ax.plot(x,UPSO)[0]
l6 = ax.plot(x,Chaotic_DEEPSO)[0]
l7 = ax.plot(x,VNS_DEEPSO)[0]
l8 = ax.plot(x,Improved_EVDEPSO)[0]
l9 = ax.plot(x,PSO_GBP)[0]
l10 = ax.plot(x,CEPSO)[0]


lgd = fig.legend([l1, l2, l3, l4, l5, l6, l7, l8, l9, l10],              # List of the line objects
           labels= line_labels,       # The labels for each line
           loc="center right",        # Position of the legend
           borderaxespad=0.1,         # Add little spacing around the legend box
         #  bbox_to_anchor=(1.3, 0.5),
           title="2018 Algorithm"        # Title for the legend
           )      



#plt.title('Average Convergence Rate')
plt.xlabel('Run')
plt.ylabel('Rate')
#plt.legend(loc=0)
plt.grid(True)
# Adjust the scaling factor to fit your legend text completely outside the plot
# (smaller value results in more space being made for the legend)
plt.subplots_adjust(right=0.85)
plt.show()

#fig.savefig('image_output.png',
 #           dpi=300, 
  #          format='png', 
   #         bbox_extra_artists=(lgd,),
    #        bbox_inches='tight')